scalar Time

directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

directive @hasRole(role: Role!) on FIELD_DEFINITION | OBJECT # set minimum layer of security
directive @pagination(maxLength: Int!) on FIELD_DEFINITION

enum Role @goModel(model: "github.com/KnightHacks/knighthacks_shared/models.Role") {
    ADMIN
    """
    for now keep this the same
    """
    SPONSOR
    NORMAL
    OWNS
}

type Event @key(fields: "id") {
  id: ID!
  name: String!
  start_date: Time!
  end_date: Time!
  description: String!
  location: String!
}

type Query {
  events: [Event!]!
}

input NewEvent {
  name: String!
  start_date: Time!
  end_date: Time!
  description: String!
  location: String!
}

input UpdatedEvent {
  name: String
  start_date: Time
  end_date: Time
  description: String
  location: String
}

type Mutation {
  createEvent(input: NewEvent!): Event!
  updateEvent(id: ID!, input: UpdatedEvent!): Event!
  deleteEvent(id: ID!): Boolean!
}
